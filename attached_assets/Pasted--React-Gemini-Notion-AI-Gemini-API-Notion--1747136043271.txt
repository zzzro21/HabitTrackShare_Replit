// React 기반의 개인화 Gemini + Notion AI 비서 앱 템플릿
// 주요 기능: 사용자별 Gemini API 키 & Notion 설정 → 대화 파싱 & 일정 기록

import React, { useState } from 'react';

const App = () => {
  const [userSettings, setUserSettings] = useState({
    geminiKey: '',
    notionToken: '',
    notionDbId: '',
    userId: ''
  });

  const [input, setInput] = useState('');
  const [response, setResponse] = useState('');

  const handleSettingChange = (e) => {
    const { name, value } = e.target;
    setUserSettings({ ...userSettings, [name]: value });
  };

  const saveSettings = () => {
    localStorage.setItem('userSettings', JSON.stringify(userSettings));
    alert('✅ 설정이 저장되었습니다.');
  };

  const loadSettings = () => {
    const saved = localStorage.getItem('userSettings');
    if (saved) setUserSettings(JSON.parse(saved));
  };

  const handleInput = (e) => setInput(e.target.value);

  const handleSubmit = async () => {
    const prompt = `"${input}" 이 문장에서 날짜, 시간, 내용(스케줄)을 JSON 형태로 추출해줘.`;

    try {
      const geminiRes = await fetch('https://generativelanguage.googleapis.com/v1beta3/models/gemini-pro:generateContent?key=' + userSettings.geminiKey, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          contents: [{ parts: [{ text: prompt }] }]
        })
      });

      const geminiData = await geminiRes.json();
      const aiOutput = geminiData.candidates?.[0]?.content?.parts?.[0]?.text || '결과 없음';
      setResponse(aiOutput);

      // Notion에 저장
      await fetch('https://api.notion.com/v1/pages', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${userSettings.notionToken}`,
          'Content-Type': 'application/json',
          'Notion-Version': '2022-06-28'
        },
        body: JSON.stringify({
          parent: { database_id: userSettings.notionDbId },
          properties: {
            Name: {
              title: [
                {
                  text: {
                    content: aiOutput.slice(0, 50)
                  }
                }
              ]
            },
            User: {
              rich_text: [
                {
                  text: {
                    content: userSettings.userId
                  }
                }
              ]
            },
            Memo: {
              rich_text: [
                {
                  text: {
                    content: input
                  }
                }
              ]
            }
          }
        })
      });
    } catch (err) {
      console.error('Error:', err);
      setResponse('⚠️ 에러가 발생했어요. 콘솔을 확인해주세요.');
    }
  };

  return (
    <div className="p-6 max-w-xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">🌟 Gemini + Notion AI 비서</h1>

      <div className="space-y-2">
        <input name="userId" value={userSettings.userId} onChange={handleSettingChange} placeholder="사용자 이름 또는 이메일" className="w-full border p-2" />
        <input name="geminiKey" value={userSettings.geminiKey} onChange={handleSettingChange} placeholder="Gemini API Key" className="w-full border p-2" />
        <input name="notionToken" value={userSettings.notionToken} onChange={handleSettingChange} placeholder="Notion Integration Token" className="w-full border p-2" />
        <input name="notionDbId" value={userSettings.notionDbId} onChange={handleSettingChange} placeholder="Notion DB ID" className="w-full border p-2" />
        <button onClick={saveSettings} className="bg-blue-500 text-white px-4 py-2">💾 설정 저장</button>
        <button onClick={loadSettings} className="bg-gray-300 px-4 py-2">📂 불러오기</button>
      </div>

      <div className="mt-6">
        <textarea value={input} onChange={handleInput} placeholder="예: 금요일 오후 3시에 엄마랑 병원 가기" className="w-full border p-2" rows={4}></textarea>
        <button onClick={handleSubmit} className="mt-2 bg-green-500 text-white px-4 py-2">📤 보내기</button>
      </div>

      <div className="mt-4 p-4 bg-gray-100 rounded">
        <p><strong>AI 응답:</strong></p>
        <pre>{response}</pre>
      </div>
    </div>
  );
};

export default App;
